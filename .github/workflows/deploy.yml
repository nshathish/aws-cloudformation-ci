name: Deploy CloudFormation Stack

on:
  workflow_dispatch:
    inputs:
      keypair:
        description: 'Name of an existing EC2 KeyPair to enable SSH access to the instance'
        required: true
      zone:
        description: 'Availabilityzone to create this instance'
        required: true
        default: 'eu-west-2a'
        type: choice
        options:
          - 'eu-west-2a'
          - 'eu-west-2b'
          - 'eu-west-2c'
      instance:
        description: 'Instance type'
        required: true
        default: 't2.micro'
        type: choice
        options:
          - 't2.micro'
          - 't2.small'
          - 't2.medium'
        
    
jobs:
  deploy:
    name: Deploy stack to AWS
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-2'
    
    - name: Configure environment name
      id: env-name
      env:
        REPO: ${{ github.repository }}
      run: |
        ENVIRONMENT=`echo $REPO | tr "/" "-"`
        echo "Environment name: $ENVIRONMENT"
        echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

    - name: Deploy CloudFormation stack
      uses: aws-actions/aws-cloudformation-github-deploy@master
      with:
        name: ${{ steps.env-name.outputs.environment }}-cluster
        template: template.yml
        no-fail-on-empty-changeset: "1"
        parameter-overrides: >-
          MyKeyName=${{ github.event.inputs.keypair }},
          MyAvailabilityZone=${{ github.event.inputs.zone }},
          MyInstanceType=${{ github.event.inputs.instance }}
